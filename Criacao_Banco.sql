/* 
PRÓ-REITORIA ACADÊMICA
ESCOLA DE EDUCAÇÃO, TECNOLOGIA E COMUNICAÇÃO
CURSO DE CIÊNCIA DA COMPUTAÇÃO

TRABALHO DE CONCLUSÃO DE DISCIPLINA PARTE 2
LABORATÓRIO DE BANCO DE DADOS GPE02M0234

AUTORES:
RAFAEL RIKI OGAWA OSIRO - UC21100716

ORIENTADORA: JOYCE SIQUEIRA

BRASÍLIA - DF
2021
*/

-- ------------------------- --
-- CRIACAO DO BANCO DE DADOS --
-- ------------------------- --
DROP DATABASE IF EXISTS transportadora;						## VAI EXCLUIR O BANCO SE JÁ EXISTIR ##
CREATE DATABASE IF NOT EXISTS transportadora					## VAI CRIAR O BANCO SE NÃO EXISTIR ##
	DEFAULT CHARACTER SET utf8									## VAI DEFINIR COMO PADRÃO OS CARACTERES COMO utf8
    DEFAULT COLLATE utf8_general_ci;							## VAI DEFINIR COMO PADRÃO OS AGRUPAMENTOS COMO utf8_general_ci
USE transportadora;											## VAI SELECIONAR O BANCO DE DADOS

-- ------------------- --
-- CRIACAO DAS TABELAS --
-- ------------------- --

## CRIAÇÃO DA TABELA ENDERECOS _______________________________________________________________________________________________##
DROP TABLE IF EXISTS enderecos;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS enderecos (							## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
    logradouro VARCHAR(100) NOT NULL,							## CRIA A COLUNA logradouro COMO CARACTERE VARIAVEL DE ATÉ 100 CARACTERES, NÃO NULO
    bairro VARCHAR(50) NOT NULL,								## CRIA A COLUNA bairro COMO CARACTERE VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
    cidade VARCHAR(50) NOT NULL,								## CRIA A COLUNA cidade COMO CARACTERE VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
    uf CHAR(2) NOT NULL,										## CRIA A COLUNA uf COMO CARACTERE COM 2 CARACTERES, NÃO NULO
    cep INT(8) NOT NULL,										## CRIA A COLUNA cep COMO INTEIRO COM 8 NÚMEROS, NÃO NULO
    PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE						## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA TELEFONES _______________________________________________________________________________________________##
DROP TABLE IF EXISTS telefones;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS telefones (							## VAI CRIAR A TABELA SE NÃO EXISITR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	ddd INT(2) UNSIGNED NOT NULL,								## CRIA A COLUNA ddd COMO INTEIRO, NÃO NEGATIVO, NÃO NULO
	telefone INT(9) UNSIGNED NOT NULL,							## CRIA A COLUNA telefone COMO INTEIRO, NÃO NEGATIVO, NÃO NULO
    PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE						## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA CLIENTES ________________________________________________________________________________________________##
DROP TABLE IF EXISTS clientes;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS clientes (							## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
    endereco INT UNSIGNED NOT NULL,								## CRIA A COLUNA endereco COMO INTEIRO, NÃO NEGATIVO, NÃO NULO
    numero VARCHAR(10) NOT NULL DEFAULT '',						## CRIA A COLUNA numero COMO CARACTERE VARIAVEL DE ATE 10 CARACTERES, NÃO NULO, COLOCAR POR PADRÃO "''"
    telefone INT UNSIGNED NOT NULL,								## CRIA A COLUNA telefone COMO INTEIRO, NÃO NEGATIVO, NÃO INTEIRO
    PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
    CONSTRAINT fk_clientes_enderecos							## CRIA UMA CONSTRAINT CHAMDA "fk_clientes_enderecos"
		FOREIGN KEY (endereco)									## TRANSFORMA A COLUNA endereco COMO CHAVE ESTRANGEIRA
		REFERENCES enderecos (id),								## FAZ A REFERENCIA DA TABELA enderecos, DA COLUNA id
    CONSTRAINT fk_clientes_telefones							## CRIA UMA CONSTRAINT CHAMDA "fk_clientes_telefones"
		FOREIGN KEY (telefone)									## TRANSFORMA A COLUNA telefone COMO CHAVE ESTRANGEIRA
        REFERENCES telefones (id),								## FAZ A REFERENCIA DA TABELA telefones, DA COLUNA id
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE						## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA FISICA __________________________________________________________________________________________________##
DROP TABLE IF EXISTS fisica;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS fisica (								## VAI CRIAR A TABELA SE NÃO EXISTIR
	nome VARCHAR(50) NOT NULL,									## CRIA A COLUNA nome COMO CARACTERE, VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
	sobrenome VARCHAR(50) NOT NULL,								## CRIA A COLUNA cidade COMO CARACTERE, VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
	cpf CHAR(11) NOT NULL,										## CRIA A COLUNA cpf COMO CARACTERE, COM 11 CARACTERES, NÃO NULO
	rg VARCHAR(15) NOT NULL,									## CRIA A COLUNA rg COMO CARACTERE, VARIAVEL DE ATÉ 15 CARACTERES, NÃO NULO
	clientes_id INT UNSIGNED NOT NULL,							## CRIA A COLUNA clientes_id COMO INTEIRO, NÃO NULO
	PRIMARY KEY (clientes_id),									## TRANSFORMA A COLUNA clientes_id EM CHAVE PRIMÁRIA
	CONSTRAINT fk_fisica_clientes								## CRIA UMA CONSTRAINT CHAMDA "fk_fisica_clientes"
		FOREIGN KEY (clientes_id)								## TRANSFORMA A COLUNA clientes_id COMO CHAVE ESTRANGEIRA
		REFERENCES clientes (id),								## FAZ A REFERENCIA DA TABELA clientes, DA COLUNA id
	UNIQUE INDEX rg_UNIQUE (rg ASC) VISIBLE,					## FAZ COM QUE A COLUNA rg SEJA ÚNICO E ORDENA EM CRESCENTE
	UNIQUE INDEX cpf_UNIQUE (cpf ASC) INVISIBLE					## FAZ COM QUE A COLUNA cpf SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA JURIDICA ________________________________________________________________________________________________##
DROP TABLE IF EXISTS juridica;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS juridica (							## VAI CRIAR A TABELA SE NÃO EXISTIR
	razao_social VARCHAR(50) NOT NULL,							## CRIA A COLUNA razao_social COMO CARACTERE, VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
	cnpj CHAR(14) NOT NULL,										## CRIA A COLUNA cnpj COMO CARACTERE, COM 14 CARACTERES, NÃO NULO
	ie VARCHAR(15) NULL DEFAULT '',								## CRIA A COLUNA ie COMO CARACTERE, COM 15 CARACTERES, NÃO NULO, COLOCAR POR PADRÃO "''"
	im VARCHAR(15) NULL DEFAULT '',								## CRIA A COLUNA im COMO CARACTERE, COM 15 CARACTERES, NÃO NULO, COLOCAR POR PADRÃO "''"
	clientes_id INT UNSIGNED NOT NULL,							## CRIA A COLUNA clientes_id COMO INTEIRO, NÃO NULO
	PRIMARY KEY (clientes_id),									## TRANSFORMA A COLUNA clientes_id EM CHAVE PRIMÁRIA
	CONSTRAINT fk_juridica_clientes								## CRIA UMA CONSTRAINT CHAMDA "fk_juridica_clientes"
		FOREIGN KEY (clientes_id)								## TRANSFORMA A COLUNA clientes_id COMO CHAVE ESTRANGEIRA
		REFERENCES clientes (id),								## FAZ A REFERENCIA DA TABELA clientes, DA COLUNA id
	UNIQUE INDEX cnpj_UNIQUE (cnpj ASC) VISIBLE,				## FAZ COM QUE A COLUNA cnpj SEJA ÚNICO E ORDENA EM CRESCENTE
	UNIQUE INDEX ie_UNIQUE (ie ASC) INVISIBLE,					## FAZ COM QUE A COLUNA ie SEJA ÚNICO E ORDENA EM CRESCENTE
	UNIQUE INDEX im_UNIQUE (im ASC) VISIBLE						## FAZ COM QUE A COLUNA im SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA CARGOS __________________________________________________________________________________________________##
DROP TABLE IF EXISTS cargos;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS cargos (								## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	descricao VARCHAR(50) NOT NULL,								## CRIA A COLUNA descricao COMO CARACTERE, VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
	PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
  	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE						## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA FUNCIONÁRIOS ____________________________________________________________________________________________##
DROP TABLE IF EXISTS funcionarios;								## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS funcionarios (						## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	matricula INT UNSIGNED NOT NULL,							## CRIA A COLUNA matricula COMO INTEIRO, NÃO NEGATIVO, NÃO NULO
	nome VARCHAR(100) NOT NULL,									## CRIA A COLUNA nome COMO CARACTERE, VARIAVEL DE ATÉ 100 CARACTERES, NÃO NULO
	cargo INT UNSIGNED NOT NULL,								## CRIA A COLUNA cargo COMO INTEIRO, NÃO NEGATIVO, NÃO NULO
	PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
	CONSTRAINT fk_funcionarios_cargos							## CRIA UMA CONSTRAINT CHAMDA "fk_funcionarios_cargos"
		FOREIGN KEY (cargo)										## TRANSFORMA A COLUNA cargo COMO CHAVE ESTRANGEIRA
		REFERENCES cargos (id),									## FAZ A REFERENCIA DA TABELA cargos, DA COLUNA id
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE,					## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
	UNIQUE INDEX matricula_UNIQUE (matricula ASC) INVISIBLE		## FAZ COM QUE A COLUNA matricula SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA FORMAS_PAGAMENTO ________________________________________________________________________________________##
DROP TABLE IF EXISTS formas_pagamento ;							## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS formas_pagamento (					## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	descricao VARCHAR(50) NOT NULL,								## CRIA A COLUNA descricao COMO CARACTERE, VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
	taxas FLOAT UNSIGNED NOT NULL DEFAULT 0,					## CRIA A COLUNA taxas COMO NUMERO REAL, NÃO NEGATIVO, NÃO NULO, , COLOCAR POR PADRÃO "0"
	PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE						## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA SERVICOS ________________________________________________________________________________________________##
DROP TABLE IF EXISTS servicos;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS servicos (							## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	descricao VARCHAR(50) NOT NULL,								## CRIA A COLUNA descricao COMO CARACTERE, VARIAVEL DE ATÉ 50 CARACTERES, NÃO NULO
	preco FLOAT UNSIGNED NOT NULL DEFAULT 0,					## CRIA A COLUNA preco COMO NUMERO REAL, NÃO NEGATIVO, NÃO NULO, COLOCAR POR PADRÃO "0
	PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE						## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA VEICULOS ________________________________________________________________________________________________##
DROP TABLE IF EXISTS veiculos;									## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS veiculos (							## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	marca VARCHAR(30) NOT NULL,									## CRIA A COLUNA marca COMO CARACTERE, VARIAVEL DE ATÉ 30 CARACTERES, NÃO NULO
	modelo VARCHAR(30) NOT NULL,								## CRIA A COLUNA modelo COMO CARACTERE, VARIAVEL DE ATÉ 30 CARACTERES, NÃO NULO
	placa CHAR(7) NOT NULL,										## CRIA A COLUNA placa COMO CARACTERE, COM 7 CARACTERES, NÃO NULO
	estado CHAR(2) NOT NULL,									## CRIA A COLUNA estado COMO CARACTERE, COM 7 CARACTERES, NÃO NULO
	PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE,					## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
	UNIQUE INDEX placa_UNIQUE (placa ASC) VISIBLE				## FAZ COM QUE A COLUNA placa SEJA ÚNICO E ORDENA EM CRESCENTE
);

## CRIAÇÃO DA TABELA ORDENS_SERVICOS _________________________________________________________________________________________##
DROP TABLE IF EXISTS ordens_servicos;							## VAI EXCLUIR A TABELA SE JÁ EXISTIR
CREATE TABLE IF NOT EXISTS ordens_servicos (					## VAI CRIAR A TABELA SE NÃO EXISTIR
	id INT UNSIGNED NOT NULL AUTO_INCREMENT,					## CRIA A COLUNA id COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	servicos INT UNSIGNED NOT NULL,								## CRIA A COLUNA servicos COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	cliente INT UNSIGNED NOT NULL,								## CRIA A COLUNA cliente COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	origem INT UNSIGNED NOT NULL,								## CRIA A COLUNA origem COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	numero_origem VARCHAR(10) NOT NULL DEFAULT '',				## CRIA A COLUNA numero_origem COMO CARACTERE, VARIAVEL DE ATÉ 10 CARACTERES, NÃO NULO, COLOCAR POR PADRÃO "0"
	destino INT UNSIGNED NOT NULL,								## CRIA A COLUNA origem COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	numero_destino VARCHAR(10) NOT NULL DEFAULT '',				## CRIA A COLUNA numero_destino COMO CARACTERE, VARIAVEL DE ATÉ 10 CARACTERES, NÃO NULO, COLOCAR POR PADRÃO "0"
	objeto VARCHAR(200) NOT NULL,								## CRIA A COLUNA objeto COMO CARACTERE, VARIAVEL DE ATÉ 200 CARACTERES, NÃO NULO
	quantidade INT UNSIGNED NOT NULL DEFAULT 0,					## CRIA A COLUNA quantidade COMO INTEIRO, VARIAVEL DE ATÉ 10 CARACTERES, NÃO NULO, COLOCAR POR PADRÃO "0"
	peso FLOAT UNSIGNED NOT NULL DEFAULT 0,						## CRIA A COLUNA peso COMO REAL, NÃO NEGATIVO, NÃO NULO, COLOCAR POR PADRÃO "0"
	preco_final FLOAT UNSIGNED NOT NULL DEFAULT 0,				## CRIA A COLUNA preco_final COMO REAL, NÃO NEGATIVO, NÃO NULO, COLOCAR POR PADRÃO "0"
	formas_pagamento INT UNSIGNED NOT NULL,						## CRIA A COLUNA formas_pagamento COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	atendente INT UNSIGNED NOT NULL,							## CRIA A COLUNA atendente COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	veiculo INT UNSIGNED NOT NULL,								## CRIA A COLUNA veiculo COMO INTEIRO, NÃO NEGATIVO, NÃO NULO, AUTO INCREMENTO
	data_recebimento DATE NOT NULL,								## CRIA A COLUNA data_recebmento COMO DATA, NÃO NULO
	PRIMARY KEY (id),											## TRANSFORMA A COLUNA id EM CHAVE PRIMÁRIA
	UNIQUE INDEX id_UNIQUE (id ASC) VISIBLE,					## FAZ COM QUE A COLUNA id SEJA ÚNICO E ORDENA EM CRESCENTE
	CONSTRAINT fk_ordens_servicos_veiculos						## CRIA UMA CONSTRAINT CHAMDA "fk_ordens_servicos_veiculos"
		FOREIGN KEY (veiculo)									## TRANSFORMA A COLUNA veiculo COMO CHAVE ESTRANGEIRA
		REFERENCES veiculos (id),								## FAZ A REFERENCIA DA TABELA veiculos, DA COLUNA id
	CONSTRAINT fk_ordens_servicos_funcionarios					## CRIA UMA CONSTRAINT CHAMDA "fk_ordens_servicos_funcionarios"
		FOREIGN KEY (atendente)									## TRANSFORMA A COLUNA atendente COMO CHAVE ESTRANGEIRA
		REFERENCES funcionarios (id),							## FAZ A REFERENCIA DA TABELA funcionarios, DA COLUNA id
	CONSTRAINT fk_ordens_servicos_servicos						## CRIA UMA CONSTRAINT CHAMDA "fk_ordens_servicos_servicos"
		FOREIGN KEY (servicos)									## TRANSFORMA A COLUNA servicos COMO CHAVE ESTRANGEIRA
		REFERENCES servicos (id),								## FAZ A REFERENCIA DA TABELA servicos, DA COLUNA id
	CONSTRAINT fk_ordens_servicos_formas_pagamento				## CRIA UMA CONSTRAINT CHAMDA "fk_ordens_servicos_formas_pagamento"
		FOREIGN KEY (formas_pagamento)							## TRANSFORMA A COLUNA formas_pagamento COMO CHAVE ESTRANGEIRA
		REFERENCES formas_pagamento (id),						## FAZ A REFERENCIA DA TABELA formas_pagamento, DA COLUNA id
	CONSTRAINT fk_ordens_servicos_enderecos_origem				## CRIA UMA CONSTRAINT CHAMDA "fk_ordens_servicos_enderecos_origem"
		FOREIGN KEY (origem)									## TRANSFORMA A COLUNA origemCOMO CHAVE ESTRANGEIRA
		REFERENCES enderecos (id),								## FAZ A REFERENCIA DA TABELA enderecos, DA COLUNA id
	CONSTRAINT fk_ordens_servicos_clientes						## CRIA UMA CONSTRAINT CHAMDA "fk_ordens_servicos_clientes"
		FOREIGN KEY (cliente)									## TRANSFORMA A COLUNA cliente COMO CHAVE ESTRANGEIRA
		REFERENCES clientes (id),								## FAZ A REFERENCIA DA TABELA clientes, DA COLUNA id
	CONSTRAINT fk_ordens_servicos_enderecos_destino				## CRIA UMA CONSTRAINT CHAMDA "fk_ordens_servicos_enderecos_destino"
		FOREIGN KEY (destino)									## TRANSFORMA A COLUNA destino COMO CHAVE ESTRANGEIRA
		REFERENCES enderecos (id)								## FAZ A REFERENCIA DA TABELA enderecos, DA COLUNA id
);